version: '3'

services:
  db:
    image: postgres:13
    restart: always
    env_file:
      - ./.env
    volumes:
      - "postgres_data:/var/lib/postgresql/data/"
    networks:
      - backend_network

  backend:
    image: yuraskv/backend:latest
    restart: always
    env_file:
      - ./.env
    volumes:
      - "static_value:/var/html/static/"
      - "media_value:/var/html/media/"
      - "./logs:/app/logs"
    depends_on:
      - db
    networks:
      - backend_network
    expose:
      - "8000"

  nginx:
    image: yuraskv/nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "static_value:/var/html/static/"
      - "media_value:/var/html/media/"
      - "nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "/root/str/nginx/ssl:/etc/letsencrypt"
    depends_on:
      - backend
    networks:
      - backend_network

  certbot:
    image: certbot/certbot
    volumes:
      - "nginx/ssl:/etc/letsencrypt"
      - "nginx/conf.d:/etc/nginx/conf.d"
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - backend_network

networks:
  backend_network:

volumes:
  static_value:
  media_value:
  postgres_data:
