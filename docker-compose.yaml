version: '3.8'

services:
  db:
    image: postgres:13.0-alpine
    volumes:
      - /var/lib/postgresql/data/
    env_file:
      - ./.env
  web:
    image: yuraskv/backend:latest # Используем уже готовый образ вместо локальной сборки
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
    env_file:
      - ./.env
#  web:
#    build: .
#    restart: always
#    volumes:
#      - static_value:/app/static/
#      - media_value:/app/media/
#    depends_on:
#      - db
#    env_file:
#      - ./.env

  frontend:
    image: annakharatova/frontend:latest
    restart: always
    expose:
      - "3000"
    environment:
      - NODE_ENV=production

  nginx:
    image: nginx:1.21.3-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_value:/var/html/static/
      - media_value:/var/html/media/
      - /app/dist:/usr/share/nginx/html # Правильный путь к собранным файлам фронтенда внутри образа
    depends_on:
      - web
      - frontend

volumes:
  static_value:
  media_value:
