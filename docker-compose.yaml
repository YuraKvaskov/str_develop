version: '3'

services:
  db:
    image: postgres:13
    restart: always
    env_file:
      - ./.env
    volumes:
      - "postgres_data:/var/lib/postgresql/data/"
    networks:
      - str_backend_network  # Изменено!

  backend:
    image: yuraskv/backend:latest
    restart: always
    env_file:
      - ./.env
    volumes:
      - "static_value:/var/html/static/"
      - "media_value:/var/html/media/"
      - "./logs:/app/logs"
    depends_on:
      - db
    networks:
      - str_backend_network  # Изменено!
    expose:
      - "8000"

  nginx:
    image: yuraskv/nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "static_value:/var/html/static/"
      - "media_value:/var/html/media/"
      - "/etc/letsencrypt:/etc/letsencrypt"
      - "/root/str/nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "./webroot:/var/www/certbot"
    depends_on:
      - backend
    networks:
      - str_backend_network  # Изменено!

  certbot:
    image: certbot/certbot
    volumes:
      - "/etc/letsencrypt:/etc/letsencrypt"
      - "/root/str/nginx/conf.d:/etc/nginx/conf.d"
      - "./webroot:/var/www/certbot"
      - "/var/run/docker.sock:/var/run/docker.sock"
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --post-hook \"nginx -s reload\"; sleep 12h & wait $${!}; done;'"
    networks:
      - str_backend_network  # Изменено!

networks:
  str_backend_network:  # Изменено!

volumes:
  static_value:
  media_value:
  postgres_data:


#version: '3'
#
#services:
#  db:
#    image: postgres:13
#    restart: always
#    env_file:
#      - ./.env
#    volumes:
#      - "postgres_data:/var/lib/postgresql/data/"
#    networks:
#      - backend_network
#
#  backend:
#    image: yuraskv/backend:latest
#    restart: always
#    env_file:
#      - ./.env
#    volumes:
#      - "static_value:/var/html/static/"
#      - "media_value:/var/html/media/"
#      - "./logs:/app/logs"
#    depends_on:
#      - db
#    networks:
#      - backend_network
#    expose:
#      - "8000"
#
#  nginx:
#    image: yuraskv/nginx:latest
#    restart: always
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - "static_value:/var/html/static/"
#      - "media_value:/var/html/media/"
#      - "/etc/letsencrypt:/etc/letsencrypt"
#      - "/root/str/nginx/default.conf:/etc/nginx/conf.d/default.conf"
#      - "./webroot:/var/www/certbot"
#    depends_on:
#      - backend
#    networks:
#      - backend_network
#
#  certbot:
#    image: certbot/certbot
#    volumes:
#      - "/etc/letsencrypt:/etc/letsencrypt"
#      - "/root/str/nginx/conf.d:/etc/nginx/conf.d"
#      - "./webroot:/var/www/certbot"
#      - "/var/run/docker.sock:/var/run/docker.sock"
#    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --post-hook \"nginx -s reload\"; sleep 12h & wait $${!}; done;'"
#    networks:
#      - backend_network
#
#networks:
#  backend_network:
#
#volumes:
#  static_value:
#  media_value:
#  postgres_data:
#
