name: Stroymash Workflow

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'

jobs:

  build_and_push_backend_to_docker_hub:
    name: Pushing backend image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/backend:latest

  pull_frontend_from_docker_hub:
    name: Pulling frontend image from Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull frontend image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:latest

  deploy:
    name: Deploying on remote server
    runs-on: ubuntu-latest
    needs:
      - build_and_push_backend_to_docker_hub
      - pull_frontend_from_docker_hub
    steps:
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo rm -f .env        
            sudo touch .env
            sudo chmod 666 .env
            
            sudo echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            sudo echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            sudo echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            sudo echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            sudo echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            sudo echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            sudo echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            
            sudo docker-compose stop

            sudo docker-compose rm -f backend
            sudo docker-compose pull backend
            sudo docker-compose rm -f frontend
            sudo docker-compose pull frontend
            
            sudo docker-compose up -d --build
