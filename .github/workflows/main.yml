name: Stroymash Workflow

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'

jobs:

  deploy:
    name: Deploying on remote server
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Copy files via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          source: "."
          target: "/root/str/"
          strip_components: 0
          overwrite: true
          rm: true
          debug: true



      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            # Переход в директорию проекта
            cd /root/str
            echo "Current directory: $(pwd)"

            # Проверка наличия docker-compose.yml
            if [ ! -f docker-compose.yml ]; then
              echo "docker-compose.yml not found!"
              exit 1
            fi

            echo "docker-compose.yml found."
            ls -al

            # Создание файла .env
            rm -f .env
            touch .env
            chmod 600 .env

            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env

            echo "Contents of .env:"
            cat .env

            # Остановка и удаление существующих контейнеров
            docker compose down

            # Сборка и запуск контейнеров
            docker compose up -d --build
