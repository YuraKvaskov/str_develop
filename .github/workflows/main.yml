name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create project directory on server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            mkdir -p /root/str

      - name: Copy docker-compose.yml and nginx to server
        run: |
          # Копирование docker-compose.yml
          scp -o StrictHostKeyChecking=no -i ${{ secrets.SSH_KEY }} docker-compose.yml ${{ secrets.USER }}@${{ secrets.HOST }}:/root/str/
          # Копирование папки nginx
          scp -r -o StrictHostKeyChecking=no -i ${{ secrets.SSH_KEY }} nginx/ ${{ secrets.USER }}@${{ secrets.HOST }}:/root/str/nginx/

      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Переход в директорию проекта
            cd /root/str
            echo "Current directory: $(pwd)"
            echo "Listing files in $(pwd):"
            ls -la

            # Проверка наличия docker-compose.yml
            if [ ! -f docker-compose.yml ]; then
              echo "docker-compose.yml not found!"
              exit 1
            fi
            echo "docker-compose.yml found."

            # Проверка наличия nginx/nginx.Dockerfile
            if [ ! -f nginx/nginx.Dockerfile ]; then
              echo "nginx/nginx.Dockerfile not found!"
              exit 1
            fi
            echo "nginx/nginx.Dockerfile found."

            # Создание файла .env
            rm -f .env
            touch .env
            chmod 600 .env

            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env

            echo "Contents of .env:"
            cat .env

            # Запуск docker-compose
            docker-compose pull
            docker-compose up -d --build
